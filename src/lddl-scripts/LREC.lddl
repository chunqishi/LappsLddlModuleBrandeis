/*
 * The LDDL script for configuring the ANC/Vassar LAPPS service node.  This
 * script configures the types, interfaces and services available.
 */
include 'Servers'
include 'Setup'
// The Setup script includes the common LAPPS definitions for resource and
// service types, and meta-attribues.


if (args.clean) {
	println "Cleaning the database"
	include 'Cleanup'
}
else {
	println "Assuming a fresh database install."
	include 'DatabaseSetup'
}

COPYRIGHT = 'Copyright 2014 lapps.anc.org'


def directory='lrec'


// Definitions of the processing services available at Brandeis University.

include 'Common'
include 'Database'

resource {
    id NONE_ID
    copyright COPYRIGHT
    license APACHE
    description 'A resource for services that do not require a resource.'
    name 'None'
    domain DOMAIN
    type NONE_TYPE
    attributes {
    	lang 'none'
    }
}

include 'Servers'
include 'Database'
include 'Common'
include 'Functions'


def VERSION = "0.0.1"
def SERVICE = "ws-nltk-tagger"
def ROOT = "http://127.0.0.1:8080/${SERVICE}/${VERSION}/services"

License = 'Apache License, Version 2.0'


services = [
    [
      id:'opennlp.postagger',
      name:"OpenNLP (v${VERSION}) POSTagger",
      url:"${ROOT}/POSTagger",
      desc:'OpenNLP POSTagger',
      lang:'(English)',
      license:License
    ],

    [
      id:'opennlp.tokenizer',
      name:"OpenNLP (v${VERSION}) Tokenizer",
      url:"${ROOT}/Tokenizer",
      desc:'OpenNLP Tokenizer',
      lang:'(English)',
      license:License
    ],

    [
      id:'opennlp.namedentityrecognizer',
      name:"OpenNLP (v${VERSION}) NamedEntityRecognizer",
      url:"${ROOT}/NamedEntityRecognizer",
      desc:'OpenNLP NamedEntityRecognizer',
      lang:'(English)',
      license:License
    ],

    [
      id:'opennlp.splitter',
      name:"OpenNLP (v${VERSION}) Splitter",
      url:"${ROOT}/Splitter",
      desc:'OpenNLP Splitter',
      lang:'(English)',
      license:License
    ],

    [
      id:'opennlp.parser',
      name:"OpenNLP (v${VERSION}) Parser",
      url:"${ROOT}/Parser",
      desc:'OpenNLP Parser',
      lang:'(English)',
      license:License
    ],
]




services.each {
    comment it.name
    register_service(it)
}



include 'Users'

news 'The LAPPS node has been configured via LDDL'
